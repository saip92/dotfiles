# If you come from bash you might have to change your $PATH.
export PATH=$HOME/.local/bin:$HOME/bin:/usr/local/bin:$PATH
export MANPATH=$HOME/.local/man:$MANPATH

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Zinit Home
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
[ ! -d $ZINIT_HOME ] && mkdir -p "$(dirname $ZINIT_HOME)"
[ ! -d $ZINIT_HOME/.git ] && git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
source "${ZINIT_HOME}/zinit.zsh"

# Create cache and completions dir and add to $fpath (for OMZ Plugins)
mkdir -p "$ZSH_CACHE_DIR/completions"
(( ${fpath[(Ie)"$ZSH_CACHE_DIR/completions"]} )) || fpath=("$ZSH_CACHE_DIR/completions" $fpath)

# Zinit Module
# module_path+=( "$ZINIT_HOME/bin/zmodules/Src" )
# zmodload zdharma-continuum/zplugin

# Skips the global compinit
skip_global_compinit=1

# Uncomment to check loading times
# zpmod source-study

# Functions to make zinit configuration less verbose
zpt() { zinit ice wait"${1}" lucid             "${@:2}"; } # Turbo
zpi() { zinit ice lucid                          "${@}"; } # Regular Ice
zp()  { [ -z $2 ] && zinit light "${@}" || zinit "${@}"; } # zinit

# Oh My Zsh - /lib/
zpt 0a; zp snippet OMZL::clipboard.zsh
zpt 0a; zp snippet OMZL::completion.zsh
zpt 0a; zp snippet OMZL::correction.zsh
zpt 0a; zp snippet OMZL::functions.zsh
zpt 0a; zp snippet OMZL::git.zsh
zpt 0a; zp snippet OMZL::history.zsh
zpt 0a; zp snippet OMZL::key-bindings.zsh
zpt 0a; zp snippet OMZL::termsupport.zsh

# Oh My Zsh - /plugins/
zpt 0a; zp snippet OMZP::command-not-found/command-not-found.plugin.zsh
zpt 0a; zp snippet OMZP::docker/docker.plugin.zsh
zpt 0a; zp snippet OMZP::docker-compose/docker-compose.plugin.zsh
zpt 0a; zp snippet OMZP::eza/eza.plugin.zsh
zpt 0a; zp snippet OMZP::git/git.plugin.zsh
zpt 0a; zp snippet OMZP::kubectl/kubectl.plugin.zsh
zpt 0a; zp snippet OMZP::sudo/sudo.plugin.zsh

# Zsh Users
zpt 0b '{src/*.zsh,src/strategies/*}' atload'_zsh_autosuggest_start'; zp zsh-users/zsh-autosuggestions
# zp zsh-users/zsh-syntax-highlighting
zp zsh-users/zsh-history-substring-search

# zdharma-continuum
zpt 0b; zp zdharma-continuum/fast-syntax-highlighting

# Yarn Auto Completions
zpt 0 atclone"./zplug.zsh"; zp g-plane/zsh-yarn-autocompletions

# Powerlevel10k
zpi depth"1"; zp romkatv/powerlevel10k

# ***********
# * Plugins *
# ***********

# kubectx / kubens
zpi depth"1"; zp unixorn/kubectx-zshplugin

# n
zpi depth"1"; zp gretzky/n.zsh

# ************
# * Binaries *
# ************

# enhancd
zpt 0 atclone"source ./init.sh"; zp babarot/enhancd

# fzf
zpt 0 from"gh-r" as"command"; zp junegunn/fzf-bin
zp Aloxaf/fzf-tab

# fzy
# zplug "jhawthorn/fzy", as:command, rename-to:fzy, hook-build:"make && PREFIX=$HOME/.local make install"

# jq
zpt 0 from"gh-r" as"command" mv"jq-* -> jq"; zp jqlang/jq

# kubebox
zpt 0 from"gh-r" as"command" mv"kubebox-* -> kubebox"; zp astefanutti/kubebox

# ripgrep
# zplug "BurntSushi/ripgrep", from:gh-r, as:command, rename-to:rg
# zplug "plugins/ripgrrep", from:oh-my-zsh

# *********************
# * Setup Completions *
# *********************
zpt 0a atload"zicompinit; zicdreplay" blockf atpull'zinit creinstall -q .'; zp zsh-users/zsh-completions

# ******************
# * Plugin Configs *
# ******************

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# ******************
# * Custom Configs *
# ******************
for file in ~/.zsh_configs/*.zsh(.N); do
  source "$file"
done

# ***************
# * User Config *
# ***************

# Enable bash autocompletions and load from default location
autoload -U +X bashcompinit && bashcompinit

# Load local config, if present
[ -f ~/.zshrc.local ] && source ~/.zshrc.local

# Overrides
unsetopt share_history

# Exports
export GPG_TTY=$(tty)
